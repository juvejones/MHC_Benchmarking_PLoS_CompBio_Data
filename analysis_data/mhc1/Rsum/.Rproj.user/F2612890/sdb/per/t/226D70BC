{
    "contents" : "library(DiagTest3Grp)\nsetwd(\"/SFS/user/ctc/zhaoweil/MHC1_IedbNewData_Results/project/Rsum\")\n\n###List of alleles and methods\n#methods = c(\"netmhc4\", \"netmhcpan3\")\nmethods = c(\"smm\", \"smmpmbec\", \"ann\", \"pickpocket\", \"consensus\", \"netmhcpan2.8\", \"netmhccons\")\nallele_list <- read.table(\"../CountLogStrip\", sep=\"\")\nwrite(\"Allele to be calculated:\", stderr())\nprint(allele_list[[1]])\n\n### ANALYSIS ONE  ###\n###This segment only used for calculating on summary data of each method\n###Generate one summary table and VUS plots for every method\noutputfile <- \"3c_perrank_eval_allmethods.txt\"\ndf <- data.frame(methods)\nvus_col <- list()\nvus_ci_col <- list()\nSe_col <- list()\nfor (i in 1:length(methods)){\n  method <- methods[i]\n  file <- paste(\"../\",method,\"/Rdata/summary.txt\", sep=\"\")\n  datafile <- read.table(file, col.names=c(\"peptide\",\"meas_nm\",\"meas_bi\",\n                                           \"meas_contin\",\"predict\",\"predict_rank\"),sep=\"\\t\", \n                                           header= FALSE, comment.char=\"#\")\n  \n  ###Set up the input data and classify into three classes\n  data <- data.frame(datafile)\n  headerline <- which (with(data,peptide==\"peptide\"))\n  data <- data[-headerline,]\n  Binding <- list()\n  for (j in 1:length(data$meas_nm)){\n    if (as.numeric(as.character(data$meas_nm[j]))<50){\n      Binding[j]=\"SB\"\n    } \n    else if (as.numeric(as.character(data$meas_nm[j]))<500){\n      Binding[j]=\"WB\"\n    } \n    else {\n      Binding[j]=\"NB\"\n    }\n  }\n  data$binding <- Binding\n  group <- data$binding\n  ###Use percentile rank instead of affinity value###\n  factor <- as.numeric(as.character(data$predict_rank))\n  z <- factor[group==\"NB\"]\n  y <- factor[group==\"WB\"]\n  x <- factor[group==\"SB\"]\n  \n  ###Calculate VUS, VUS_CI and Se\n  vus <- VUS(x,y,z,method=\"Normal\",p=0,q=0,alpha=0.05)\n  vus_col[i] <- vus$estimate\n  vus_ci_col[i] <- (vus$estimate - vus$CI[1])\n  ###Use percentile rank instead of affinity value###                    \n  Se_col[i] <- Sp.Sm.Se(x,y,z,0.005,0.020)[3]\n\n  ###Plot the data generated by VUS; only needed for summary data\n  pdf(paste(method,\"_3c_eval_perrank.pdf\"),width=8,height=4)\n  plot(vus)\n  dev.off()\n}\n\n###Write the final table\ndf$vus <- vus_col\ndf$vusci <- vus_ci_col\ndf$Se <- Se_col\nwrite.table(as.matrix(df), outputfile, \n            col.names=c(\"Method\", \"VUS\", \"CI_L\", \"Se\"), \n            row.names=F, append=T, sep=\"\\t\")\n\n### ANALYSIS TWO  ###\n###This part do calculation on individual allele\n###Do calculation for each method and generate respective allele summary\nfor (i in 1:length(methods)){\n  method <- methods[i]\n  outputfile <- paste(method, \"_vus_perrank.txt\", sep=\"\")\n  df <- data.frame(allele_list[[1]])\n  vus_col <- list()\n  vus_ci_col <- list()\n  Se_col <- list()\n  \n  ###Inner loop on each allele; read allele data\n  for (j in 1:length(allele_list[[1]])){\n    allele <- allele_list[[1]][j]\n    file <- paste(\"../\",method,\"/Rdata/HLA-\",allele,\".txt\", sep=\"\")\n    if (file.exists(file)){\n      datafile <- read.table(file, col.names=c(\"peptide\",\"meas_nm\",\"meas_bi\",\n                             \"meas_contin\",\"predict\",\"predict_rank\"),sep=\"\\t\", \n                             header= FALSE, comment.char=\"#\")\n    }\n    else{\n      print(paste(\"file not exist for allele:\", allele))\n      vus_col[j] <- NULL\n      Se_col[j] <- NULL\n      next\n    } \n    \n    ###Set up the input data and classify into three classes\n    data <- data.frame(datafile)\n    headerline <- which (with(data,peptide==\"peptide\"))\n    data <- data[-headerline,]\n    Binding <- list()\n    for (k in 1:length(data$meas_nm)){\n      if (as.numeric(as.character(data$meas_nm[k]))<50){\n        Binding[k]=\"SB\"\n      } \n      else if (as.numeric(as.character(data$meas_nm[k]))<500){\n        Binding[k]=\"WB\"\n      } \n      else {\n        Binding[k]=\"NB\"\n      }\n    }\n    data$binding <- Binding\n    group <- data$binding\n    #factor <- as.numeric(as.character(data$predict))\n    \n    ###Use percentile rank instead of affinity value###\n    factor <- as.numeric(as.character(data$predict_rank))\n    z <- factor[group==\"NB\"]\n    y <- factor[group==\"WB\"]\n    x <- factor[group==\"SB\"]\n    \n    ###Calculate VUS\n    vus_col[j] <- tryCatch(\n      {\n        vus <- Normal.VUS(x,y,z,p=0,q=0,alpha=0.05)\n        vus_col[j] <- vus$estimate\n      },\n      error=function(cond){\n        message(paste(cond, \"\\n\", sep=\"\"))\n        return(NA)\n      }\n    )\n    \n    ###Calculate specificity\n    Se_col[j] <- tryCatch(\n      {\n        ###Se_col[j] <- Sp.Sm.Se(x,y,z,0.426,0.638)[3]\n        \n        ###Use percentile rank instead of affinity value###\n        Se_col[j] <- Sp.Sm.Se(x,y,z,0.005,0.020)[3]\n      },\n      error=function(cond){\n        message(paste(cond, \"\\n\", sep=\"\"))\n        return(NA)\n      }\n    )\n    \n    vus_col[j] <- format(vus_col[j], digits=4)\n    Se_col[j] <- format(Se_col[j], digits=4)\n  }\n  df$vus <- vus_col\n  df$Se <- Se_col\n  write.table(as.matrix(df), outputfile, col.names=c(\"Allele\", \"VUS\", \"Se\"), \n              row.names=F, append=F, sep=\"\\t\")\n}\n\n\n",
    "created" : 1477082612612.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3278859741",
    "id" : "226D70BC",
    "lastKnownWriteTime" : 1477506405,
    "path" : "/SFS/user/ctc/zhaoweil/MHC1_IedbNewData_Results/project/Rsum/all_allele_3class_eval.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}